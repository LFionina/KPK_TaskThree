//{===========================================================================
//! @file       Person.h
//!
//!             Класс ПЕРСОНА
//!
//!@author  (C) Фионина Людмила Евгеньевна, г. Самара,
//!@date          2021
//!
//!@mainpage
//!         КЛАСС ПЕРСОНАЖЕЙ ИГРЫ
//!
//!
//!@par   Назначение
//!
//!       Класс Персона - класс для создания персонажей игры "Бродилка".
//!     Состоит из 5 компонент: координаты персонажа на поле игры, вид анимации персонажа,
//!     уровень здоровья и количество монет.
//!
//!     Включает две функции класса: рисование персонажа и управление персонажем.
//!
//!       Class Person - a class for creating characters for the game "Adventurer".
//!     Consists of 5 components: coordinates of the character on the field of play,
//!     type of character animation, health level and number of coins.
//!
//!     Includes two class functions: character drawing and character control.
//!
//}===========================================================================


//{-----------------------------------------------------------------------------
//! Структура персонажа
//!
//! @param  x       координата по х
//!         y       координата по Y
//!         anim    вид анимации (вид спереди, слева, справа, сзади)
//!
//!         live    уровень здоровья (от 0 до 100%)
//!         money   количество заработанных монет
//!
//}-----------------------------------------------------------------------------
struct Person
    {
    double x, y;

    int anim;

    int live;
    int money;

    void Draw (int frame);
    void Control ();
    };

//{-----------------------------------------------------------------------------
//! Функция рисования заданного кадра персонажа при помощи спрайтовой анимации
//!
//! @param frame  кадр анимации персонажа при движении
//!
//}-----------------------------------------------------------------------------
void Person::Draw (int frame)
    {
    txTransparentBlt (txDC(), x, y, X_PERSON, Y_PERSON, SPRITE_PERSON, (frame % 4)*X_PERSON, anim*Y_PERSON, RGB(0,255,0));
    }

//{-----------------------------------------------------------------------------
//! Функция управления движением персонажа
//!
//! @param frame  кадр анимации персонажа при движении
//!
//}-----------------------------------------------------------------------------
void Person::Control ()
    {
    if (txGetAsyncKeyState (VK_RIGHT) )
        {
        (*this).x += STEP;
        (*this).anim = PERSON_RIGHT;
        }
    if (txGetAsyncKeyState (VK_LEFT ) )
        {
        (*this).x -= STEP;
        (*this).anim = PERSON_LEFT;
        }
    if (txGetAsyncKeyState (VK_UP   ) )
        {
        (*this).y -= STEP;
        (*this).anim = PERSON_UP;
        }
    if (txGetAsyncKeyState (VK_DOWN ) )
        {
        (*this).y += STEP;
        (*this).anim = PERSON_DOWN;
        }
    }
